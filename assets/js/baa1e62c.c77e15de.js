"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9635],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),f=o,m=u["".concat(d,".").concat(f)]||u[f]||c[f]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4184:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:6},d="Build Preferences",l={unversionedId:"basics/build-preferences",id:"basics/build-preferences",title:"Build Preferences",description:"You can optionally configure a few options for how the Track Player module is built in your app. Add a JSON file named track-player.json to the root folder of your app (the same folder where index.android.js and node_modules are stored) and set one or more of the following properties:",source:"@site/docs/basics/build-preferences.md",sourceDirName:"basics",slug:"/basics/build-preferences",permalink:"/docs/next/basics/build-preferences",editUrl:"https://github.com/doublesymmetry/react-native-track-player/tree/main/docs/docs/basics/build-preferences.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"app",previous:{title:"Platform Support",permalink:"/docs/next/basics/platform-support"},next:{title:"Events",permalink:"/docs/next/api/events"}},p={},c=[{value:"<code>dash</code> (Android)",id:"dash-android",level:2},{value:"<code>hls</code> (Android)",id:"hls-android",level:2},{value:"<code>smoothstreaming</code> (Android)",id:"smoothstreaming-android",level:2}],u={toc:c};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"build-preferences"},"Build Preferences"),(0,a.kt)("p",null,"You can optionally configure a few options for how the Track Player module is built in your app. Add a JSON file named ",(0,a.kt)("inlineCode",{parentName:"p"},"track-player.json")," to the root folder of your app (the same folder where ",(0,a.kt)("inlineCode",{parentName:"p"},"index.android.js")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"node_modules")," are stored) and set one or more of the following properties:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dash": false,\n  "hls": false,\n  "smoothstreaming": false\n}\n')),(0,a.kt)("h2",{id:"dash-android"},(0,a.kt)("inlineCode",{parentName:"h2"},"dash")," (Android)"),(0,a.kt)("p",null,"Whether it will add support for ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Dynamic_Adaptive_Streaming_over_HTTP"},"DASH")," streams. This option adds an extension for handling DASH streams, which changes the app size. Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h2",{id:"hls-android"},(0,a.kt)("inlineCode",{parentName:"h2"},"hls")," (Android)"),(0,a.kt)("p",null,"Whether it will add support for ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming#Microsoft_Smooth_Streaming"},"Smooth Streaming")," streams. This option adds an extension for handling SmoothStreaming streams, which changes the app size. Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h2",{id:"smoothstreaming-android"},(0,a.kt)("inlineCode",{parentName:"h2"},"smoothstreaming")," (Android)"),(0,a.kt)("p",null,"Whether it will add support for SmoothStreaming streams. This option adds an extension for handling SmoothStreaming streams, which changes the app size."))}f.isMDXComponent=!0}}]);